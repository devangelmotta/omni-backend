[  {    "type": "post",    "url": "v1/auth/login",    "title": "Login",    "description": "<p>Get an accessToken</p>",    "version": "1.0.0",    "name": "Login",    "group": "Auth",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token.tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token.accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "token.refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "token.expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.id",            "description": "<p>User's id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.name",            "description": "<p>User's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>User's email</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Incorrect email or password</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auth.route.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "v1/auth/refresh-token",    "title": "Refresh Token",    "description": "<p>Refresh expired accessToken</p>",    "version": "1.0.0",    "name": "RefreshToken",    "group": "Auth",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "refreshToken",            "description": "<p>Refresh token aquired when user logged in</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "tokenType",            "description": "<p>Access Token's type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "accessToken",            "description": "<p>Authorization Token</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "refreshToken",            "description": "<p>Token to get a new accessToken after expiration time</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "expiresIn",            "description": "<p>Access Token's expiration time in miliseconds</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Incorrect email or refreshToken</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auth.route.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "v1/auth/register",    "title": "Register",    "description": "<p>Register a new user</p>",    "version": "1.0.0",    "name": "Register",    "group": "Auth",    "permission": [      {        "name": "public"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ]      }    },    "filename": "src/api/routes/v1/auth.route.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "v1/auth/verify-tokens",    "title": "Check live Token",    "description": "<p>Check tokens validate</p>",    "version": "1.0.0",    "name": "checkTokens",    "group": "Auth",    "permission": [      {        "name": "public"      }    ],    "filename": "src/api/routes/v1/auth.route.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "v1/details/create",    "title": "Create report",    "description": "<p>Create a new report</p>",    "version": "1.0.0",    "name": "CreateReport",    "group": "User",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..128",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "ValidationError",            "description": "<p>Some parameters may contain invalid values</p>"          }        ],        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can create the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can create the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/details.route.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "v1/details",    "title": "List details",    "description": "<p>Get a list of details</p>",    "version": "1.0.0",    "name": "ListDetails",    "group": "User",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>User's access token</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "size": "1-",            "optional": true,            "field": "page",            "defaultValue": "1",            "description": "<p>List page</p>"          },          {            "group": "Parameter",            "type": "Number",            "size": "1-50",            "optional": true,            "field": "perPage",            "defaultValue": "1",            "description": "<p>Details per page</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "users",            "description": "<p>List of details.</p>"          }        ]      }    },    "error": {      "fields": {        "Unauthorized 401": [          {            "group": "Unauthorized 401",            "optional": false,            "field": "Unauthorized",            "description": "<p>Only authenticated users can access the data</p>"          }        ],        "Forbidden 403": [          {            "group": "Forbidden 403",            "optional": false,            "field": "Forbidden",            "description": "<p>Only admins can access the data</p>"          }        ]      }    },    "filename": "src/api/routes/v1/details.route.js",    "groupTitle": "User"  }]
